# .github/workflows/deploy.yml
name: Deploy Website

on:
  push:
    branches:
      - main # 当代码推送到 main 分支时触发

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm build # 构建你的前端项目，通常输出到 `dist` 目录

      - name: Upload build artifacts (Optional, for debugging or later use)
        uses: actions/upload-artifact@v4
        with:
          name: dist-build
          path: dist # 上传 dist 目录

      - name: Deploy files to Server # 使用 appleboy/scp-action 进行文件传输
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "dist/" # 你构建后的文件目录，通常是 dist
          target: ${{ secrets.DEPLOY_PATH }} # 服务器上的目标路径
          strip_components: 1 # 如果你想只传输 dist 目录下的内容，而不是包含 dist 目录本身，则设置为 1
          # 如果你的目标目录 `/www/wwwroot/your_website` 已经存在，
          # 且你想把 dist 里的内容直接放到 `/www/wwwroot/your_website`，
          # 那么 strip_components: 1 是必要的

      - name: Execute post-deployment commands on Server (Optional)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # 例如，如果你需要重启 Nginx 或清除缓存
            # sudo systemctl restart nginx
            # cd ${{ secrets.DEPLOY_PATH }} && php artisan cache:clear # 如果是 PHP 项目
            echo "部署完成，服务器端操作已执行。"