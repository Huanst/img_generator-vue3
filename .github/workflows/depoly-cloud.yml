# 部署到服务器的工作流配置
name: Deploy to Server

on:
  push:
    branches:
      - main  # 当 main 分支有提交时触发

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 步骤 1: 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 步骤 2: 设置 Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 步骤 3: 安装 pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '9.8.0'

      # 步骤 4: 安装依赖
      - name: Install Dependencies
        run: pnpm install

      # 步骤 5: 构建项目
      - name: Build
        run: pnpm build

      # 步骤 6: 配置 SSH
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      # 步骤 7: 准备目标目录
      - name: Prepare target directory
        run: |
          ssh -i ~/.ssh/deploy_key ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} '
            sudo chown -R $USER:$USER /www/wwwroot/huanst.cn &&
            sudo chmod -R 755 /www/wwwroot/huanst.cn &&
            rm -rf /www/wwwroot/huanst.cn/* &&
            echo "Directory prepared"
          '

      # 步骤 8: 部署到服务器
      - name: Deploy
        env:
          SSH_AUTH_SOCK: /dev/null
        run: |
          scp -i ~/.ssh/deploy_key -r dist/* ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:/www/wwwroot/huanst.cn/
          
      # 步骤 9: 恢复目录权限
      - name: Restore permissions
        if: always()
        run: |
          ssh -i ~/.ssh/deploy_key ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} '
            sudo chown -R www-data:www-data /www/wwwroot/huanst.cn &&
            sudo chmod -R 755 /www/wwwroot/huanst.cn &&
            echo "Permissions restored"
          '